on: [push, workflow_dispatch]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java-version: ['17.0.6+10']
        go-version: ['1.20']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java
        if: matrix.os != 'windows-latest'
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
      - name: Setup Go
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'windows-latest'
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache-dependency-path: pulse-go/go.sum
      - name: Cache Gradle
        if: matrix.os != 'windows-latest'
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradlew') }}
      - name: Gradle Build
        if: matrix.os != 'windows-latest'
        uses: gradle/gradle-build-action@v2
      - name: Build Java
        if: matrix.os != 'windows-latest'
        run: ./gradlew :pulse-java:build
      - name: Upload Java Artifact
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: pulse-java
          path: pulse-java/build/distributions/pulse-java-*.zip
      - name: Build Kotlin - Linux
        if: matrix.os == 'ubuntu-latest'
        run: ./gradlew :pulse-kotlin:linuxDistTar
      - name: Upload Kotlin Linux Artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: pulse-kotlin-linux
          path: pulse-kotlin/build/distributions/pulse-kotlin-linux-*.tar.gz
      - name: Build Kotlin - macOS
        if: matrix.os == 'macos-latest'
        run: ./gradlew :pulse-kotlin:macosDistTar
      - name: Upload Kotlin macOS Artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: pulse-kotlin-macos
          path: pulse-kotlin/build/distributions/pulse-kotlin-macos-*.tar.gz
      - name: Build Kotlin - Windows
        if: matrix.os == 'windows-latest'
        run: ./gradlew :pulse-kotlin:windowsDistZip
      - name: Upload Kotlin Windows Artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: pulse-kotlin-windows
          path: pulse-kotlin/build/distributions/pulse-kotlin-windows-*.zip
      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=Release
      - name: Build C++
        run: cmake --build ${{ github.workspace }}/build --config Release --target package
      - name: Test C++
        working-directory: ${{ github.workspace }}/build
        run: ctest -C Release
      - name: Upload C++ Artifact
        uses: actions/upload-artifact@v3
        with:
          name: pulse-cpp-${{ matrix.os }}
          path: build/pulse-cpp-${{ matrix.os }}-*.tar.gz
      - name: Build Go
        run: |
          if [[ ${{ matrix.os }} == 'windows-latest' ]]; then
            choco install go-task
          else
            eval "$(${HOME}/.linuxbrew/bin/brew shellenv)"
            brew install go-task
          fi
          task build
